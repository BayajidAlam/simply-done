---
- name: Provision and configure backend instances
  hosts: backend
  become: yes
  tasks:
    - name: Remove old Docker versions
      apt:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent
        purge: yes
        autoremove: yes

    - name: Update package list
      apt:
        update_cache: yes

    - name: Install dependencies for Docker
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - netcat
        state: present

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Test network connectivity to MongoDB
      command: nc -zv {{ mongodb_ip }} 27017
      register: nc_result
      ignore_errors: yes

    - name: Debug network test
      debug:
        var: nc_result

    - name: Wait for MongoDB with retries
      wait_for:
        host: "{{ mongodb_ip }}"
        port: 27017
        timeout: 30
        state: started
      register: mongodb_status
      retries: 6
      delay: 10
      until: mongodb_status is success
      ignore_errors: yes

    - name: Debug MongoDB connection status
      debug:
        var: mongodb_status

    - name: Run Backend container
      docker_container:
        name: simply-done-server
        image: bayajid23/simply-done-server:latest
        state: started
        restart_policy: always
        ports:
          - "5000:5000"
        env:
          MONGODB_URI: "mongodb://{{ mongodb_ip }}:27017/simplyDone"
          NODE_ENV: "production"
          ACCESS_TOKEN_SECRET: "esddd"
          ACCESS_TOKEN_EXPIRES_IN: "1d"
      when: mongodb_status is success