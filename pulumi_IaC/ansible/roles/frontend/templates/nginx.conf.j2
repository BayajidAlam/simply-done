server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Enhanced logging
    access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/error.log warn;

    # Global CORS headers
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' '*' always;
    add_header 'Access-Control-Max-Age' 1728000 always;

    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache" always;
    }

    location ~ ^/(users|auth|tasks|jwt) {
        resolver 8.8.8.8 valid=30s;  # Add DNS resolver
        
        proxy_pass http://{{ alb_dns }};
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Enhanced timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Retry configuration
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;

        # Buffer settings
        proxy_buffers 8 16k;
        proxy_buffer_size 32k;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 = @backend_down;
    }

    location @backend_down {
        default_type application/json;
        add_header Content-Type application/json always;
        add_header Access-Control-Allow-Origin '*' always;
        return 503 '{"error": "Backend service temporarily unavailable", "status": 503}';
    }

    error_page 404 =200 /index.html;
}